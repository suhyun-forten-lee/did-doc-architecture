@startuml P120_register_entity

'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' Settings
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
'=== Header and Footer ===
header OPEN-DID Technical Specification
footer
  	Page %page% of %lastpage% at %date("yyyy-MM-dd hh:mm:ss")
end footer

'=== Title ===
title
	<size:25>P120: Entity Registration</size>
end title

'=== Options ===
autonumber "<b>(#)</b>"

'=== Participants ===
skinparam ParticipantPadding 20
skinparam BoxPadding 2
skinparam MaxMessageSize 500
skinparam MinClassWidth 80


box Entity Provider #AliceBlue
    participant "**Entity**" as ENT <<WAS>> #WhiteSmoke
end box

box TAS Provider #AliceBlue
    participant "**TAS**" as TAS <<WAS>> #WhiteSmoke
end box

box Trusted Storage
    participant "**blockchain**" as BC <<Storage>> #WhiteSmoke
end box 

'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' Constants
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
!$refdoc = "Refer to separate document"
!$doc = "Refer to data specification document"


'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
' Content
'- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
||| 

== Entity DID Document Registration ==
rnote across #white
    Entity DID Document registration is not covered in this specification. 
end note

||| 

== P120-1: Entity Registration Start Request ==
ENT -> TAS++ : Entity Registration Start Request
rnote right of ENT #Lavender
    **[M120_REQ : Entity Registration Start Request]**
    body : 
        messageId
end note

return Entity Registration Start Response
rnote right of ENT #Lavender
    **[M120_RES : Entity Registration Start Response]**
    body : 
        txId
        authNonce
end note

||| 
== P120-2: ECDH Request ==
ENT -> ENT: Prepare and sign ECDH data\
            \n* (ReqEcdh)reqEcdh\
            \n   = Create ECDH request

ENT -> TAS++ : ECDH Request
rnote right of ENT #Lavender
    **[M120_REQ : ECDH Request]**
    body : 
        messageId
        txId
        reqEcdh
end note

    TAS -> TAS: Verify reqEcdh.proof signature

    TAS -> TAS: Perform ECDH\
                \n* sesKey = session key\
                \n* (AccEcdh)accEcdh\
                \n   = Create ECDH acceptance

    TAS -> TAS: signKeyAgree(accEcdh)

return ECDH Response
rnote right of ENT #Lavender
    **[M120_RES : ECDH Response]**
    body : 
        txId
        accEcdh
end note

ENT -> ENT: Perform ECDH\n* sesKey = session key

||| 
== P120-3: Entity Registration Request ==
ENT -> ENT: Prepare DID Auth data\
    \n* (DidAuth)didAuth = {\
    \n     did = Entity DID,\
    \n     authNonce\
    \n  }
rnote right of ENT #MintCream
    **DidAuth** : $doc
end note

ENT -> TAS++ : Entity Registration Request
rnote right of ENT #Lavender
    **[M120_REQ : Entity Registration Request]**
    body : 
        messageId
        txId
        didAuth
end note

    TAS -> TAS: vc: Issue Registration Certificate VC
    rnote right of TAS #MintCream
        **Registration Certificate VC**: $refdoc
    end note

    TAS -> TAS: vcMeta: Create Registration Certificate VC Metadata
    rnote right of TAS #MintCream
        **vcMeta** : $doc
    end note

    TAS -> BC++ : Register vcMeta {vcMeta}
    return OK

    TAS -> TAS: Encrypt vc\
            \n* iv = Generate IV\
            \n* tmp = enc(vc, sesKey, iv, padding)\
            \n* encVc = multibase(tmp)

return Entity Registration Response
rnote right of ENT #Lavender
    **[M120_RES : Entity Registration Response]**
    body:
        txId
        iv
        encVc
end note

ENT -> ENT: Decrypt encVc\
            \n* tmp = debase(encVc)\
            \n* vc = dec(tmp, sesKey, iv)

ENT -> ENT: Verify and save TAS signature
ENT -> ENT: Extract vcId = VC id

||| 
== P120-4: Entity Registration Completion ==
ENT -> TAS++ : Entity Registration Completion Request
rnote right of ENT #Lavender
    **[M120_REQ : Entity Registration Completion Request]**
    body : 
        messageId
        txId
        vcId
end note

    TAS -> TAS: Check vcId consistency

return Entity Registration Completion Response
rnote right of ENT #Lavender
    **[M120_RES : Entity Registration Completion Response]**
    body : 
        txId
end note

|||
|||
@enduml
