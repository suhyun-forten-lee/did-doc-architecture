"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[34855],{97799:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Architecture/concepts/token","title":"Open DID Token","description":"- Subject: Open DID Token","source":"@site/versioned_docs/version-1.100/Architecture/concepts/token.md","sourceDirName":"Architecture/concepts","slug":"/Architecture/concepts/token","permalink":"/architecture/ko/docs/1.100/Architecture/concepts/token","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/versioned_docs/version-1.100/Architecture/concepts/token.md","tags":[],"version":"1.100","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"PII","permalink":"/architecture/ko/docs/1.100/Architecture/concepts/manage_pii_ko"},"next":{"title":"Open DID Token","permalink":"/architecture/ko/docs/1.100/Architecture/concepts/token_ko"}}');var r=t(74848),l=t(28453);const i={},a="Open DID Token",o={},d=[{value:"Reference Documents",id:"reference-documents",level:2},{value:"Necessity of Tokens",id:"necessity-of-tokens",level:2},{value:"Types of Tokens",id:"types-of-tokens",level:2},{value:"Wallet Token",id:"wallet-token",level:3},{value:"Wallet Token Terminology",id:"wallet-token-terminology",level:4},{value:"Wallet Token Issuance Process",id:"wallet-token-issuance-process",level:4},{value:"Detailed Wallet Token Issuance Process",id:"detailed-wallet-token-issuance-process",level:4},{value:"Wallet Token Data",id:"wallet-token-data",level:4},{value:"WalletTokenSeed",id:"wallettokenseed",level:5},{value:"WalletTokenData",id:"wallettokendata",level:5},{value:"Server Token",id:"server-token",level:3},{value:"Server Token Terminology",id:"server-token-terminology",level:4},{value:"Server Token Issuance Process",id:"server-token-issuance-process",level:4},{value:"Detailed Server Token Issuance Process",id:"detailed-server-token-issuance-process",level:4},{value:"Server Token Data",id:"server-token-data",level:4},{value:"SignedWalletInfo",id:"signedwalletinfo",level:5},{value:"AttestedAppInfo",id:"attestedappinfo",level:5},{value:"ServerTokenSeed",id:"servertokenseed",level:5},{value:"ServerTokenData",id:"servertokendata",level:5}];function c(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"open-did-token",children:"Open DID Token"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Subject: Open DID Token"}),"\n",(0,r.jsx)(n.li,{children:"Author: OpenSource Development Team"}),"\n",(0,r.jsx)(n.li,{children:"Date: 2024-10-18"}),"\n",(0,r.jsx)(n.li,{children:"Version: v1.0.0"}),"\n"]}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Version"}),(0,r.jsx)(n.th,{children:"Date"}),(0,r.jsx)(n.th,{children:"Changes"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"v1.0.0"}),(0,r.jsx)(n.td,{children:"2024-10-18"}),(0,r.jsx)(n.td,{children:"Initial version"})]})})]}),"\n",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.p,{children:"Open DID uses various tokens to verify client permissions.\nThis document details the functions and data specifications of the tokens used in Open DID, and systematically organizes the token issuance process."}),"\n",(0,r.jsx)(n.h2,{id:"reference-documents",children:"Reference Documents"}),"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Reference Name"}),(0,r.jsx)(n.th,{children:"Document Name"}),(0,r.jsx)(n.th,{children:"Location"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"[OSD]"}),(0,r.jsx)(n.td,{children:"OpenDID Schema Definition Language"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"[DATA-SPEC]"}),(0,r.jsx)(n.td,{children:"(OpenDID) Data Specification"}),(0,r.jsx)(n.td,{})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"necessity-of-tokens",children:"Necessity of Tokens"}),"\n",(0,r.jsx)(n.p,{children:"Tokens are necessary to maintain security and authentication within the Open DID system. The following are the primary reasons for needing tokens:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Security"}),": Tokens are used to securely transmit and store user credentials, protecting sensitive information from exposure."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authentication"}),": Tokens facilitate the establishment and maintenance of trust between server and client. Issuers can authenticate the client sending the request via tokens."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Authorization"}),": Tokens enable granting access to specific resources or functionalities, aiding in fine-grained access control management."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"types-of-tokens",children:"Types of Tokens"}),"\n",(0,r.jsx)(n.p,{children:"The tokens used in Open DID include Wallet Token and Server Token."}),"\n",(0,r.jsx)(n.h3,{id:"wallet-token",children:"Wallet Token"}),"\n",(0,r.jsx)(n.p,{children:"Wallet Token is a token that allows an app to access a wallet, and it is issued by the wallet."}),"\n",(0,r.jsx)(n.h4,{id:"wallet-token-terminology",children:"Wallet Token Terminology"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Wallet Token Seed"}),": An initial seed value generated by the wallet and delivered to the app."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Wallet Token Data"}),": Data generated by the CApp service and delivered to the app, based on the WalletTokenSeed. This is the primary data for generating the Wallet Token."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Nonce"}),": A one-time value generated by the wallet, used in combination with WalletTokenData to generate the Wallet Token."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Wallet Token"}),": A token granting access to the wallet, used by the app to interact with the wallet."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"wallet-token-issuance-process",children:"Wallet Token Issuance Process"}),"\n",(0,r.jsx)(n.p,{children:"Below is a summary diagram of the Wallet Token issuance process."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"proc_wallet_token",src:t(96775).A+"",width:"1000",height:"549"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"The CApp requests the WalletTokenSeed from the wallet."}),"\n",(0,r.jsx)(n.li,{children:"The wallet generates the WalletTokenSeed and delivers it to the CApp."}),"\n",(0,r.jsx)(n.li,{children:"The CApp requests the WalletTokenData from the CApp service."}),"\n",(0,r.jsx)(n.li,{children:"The CApp service generates the WalletTokenData and delivers it to the CApp."}),"\n",(0,r.jsx)(n.li,{children:"The CApp requests the wallet to generate a wallet token."}),"\n",(0,r.jsx)(n.li,{children:"The wallet generates a nonce."}),"\n",(0,r.jsx)(n.li,{children:"The wallet combines the nonce with WalletTokenData to generate the Wallet Token."}),"\n",(0,r.jsx)(n.li,{children:"The wallet stores the Wallet Token."}),"\n",(0,r.jsx)(n.li,{children:"The wallet delivers the Wallet Token to the app."}),"\n",(0,r.jsx)(n.li,{children:"The CApp combines the WalletTokenData and nonce to generate the Wallet Token."}),"\n",(0,r.jsx)(n.li,{children:"The CApp submits the Wallet Token whenever it uses the wallet."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"detailed-wallet-token-issuance-process",children:"Detailed Wallet Token Issuance Process"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"proc_wallet_token_detail",src:t(8979).A+"",width:"1035",height:"1292"})}),"\n",(0,r.jsx)(n.h4,{id:"wallet-token-data",children:"Wallet Token Data"}),"\n",(0,r.jsx)(n.p,{children:"Below are the data specifications necessary for generating a Wallet Token. For more details, please refer to [DATA-SPEC]."}),"\n",(0,r.jsx)(n.h5,{id:"wallettokenseed",children:"WalletTokenSeed"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c#",children:'def object WalletTokenSeed: "wallet token seed"\n{\n    + WALLET_TOKEN_PURPOSE "purpose"   : "token usage purpose"\n    + utcDatetime          "validUntil": "token expiration date and time"\n    + string               "pkgName"   : "CApp package name"\n    + multibase            "nonce"     : "wallet nonce", byte_length(16)\n}\n'})}),"\n",(0,r.jsx)(n.h5,{id:"wallettokendata",children:"WalletTokenData"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c#",children:'def object WalletTokenData: "wallet token data"\n{\n    + WalletTokenSeed "seed"      : "wallet token seed"\n    + multibase       "sha256_pii": "multibase(sha256(personId)) - hashed PII"\n    + Provider        "provider"  : "wallet provider information"\n    + multibase       "nonce"     : "provider nonce", byte_length(16)\n    + AssertProof     "proof"     : "provider proof - wallet provider signature"\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"server-token",children:"Server Token"}),"\n",(0,r.jsx)(n.p,{children:"Server Token is a token that allows an app to access services like TA (Trusted Application), issued by the service server."}),"\n",(0,r.jsx)(n.h4,{id:"server-token-terminology",children:"Server Token Terminology"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Signed Wallet Info"}),": Signed wallet information provided by the wallet to the CApp, used by TA to verify the wallet."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Attested App Info"}),": Certified app information provided by the CApp service to the CApp, used by TA to verify the CApp."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server Token Seed"}),": Initial seed value generated by the CApp and delivered to TA, serving as the basis for creating ServerTokenData."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server Token Data"}),": Data generated by TA and delivered to the CApp, based on the ServerTokenSeed. This is the primary data for generating the Server Token."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IV"}),": Initialization Vector used in the encryption process."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Session Key"}),": Session key between TA and the CApp, exchanged before the server token issuance."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Server Token"}),": A token granting access to the server, used by the CApp to interact with the server."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"server-token-issuance-process",children:"Server Token Issuance Process"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"proc_server_token",src:t(7793).A+"",width:"1006",height:"676"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"The CApp requests the SignedWalletInfo from the wallet."}),"\n",(0,r.jsx)(n.li,{children:"The wallet generates the SignedWalletInfo and delivers it to the CApp."}),"\n",(0,r.jsx)(n.li,{children:"The CApp requests the AttestedAppInfo from the CApp service."}),"\n",(0,r.jsx)(n.li,{children:"The CApp service generates the AttestedAppInfo and delivers it to the CApp."}),"\n",(0,r.jsx)(n.li,{children:"The CApp generates the ServerTokenSeed."}),"\n",(0,r.jsx)(n.li,{children:"The CApp requests TA to generate the ServerToken."}),"\n",(0,r.jsx)(n.li,{children:"TA generates the ServerTokenData."}),"\n",(0,r.jsx)(n.li,{children:"TA generates the ServerToken."}),"\n",(0,r.jsx)(n.li,{children:"TA generates the IV."}),"\n",(0,r.jsx)(n.li,{children:"TA encrypts the ServerTokenData."}),"\n",(0,r.jsx)(n.li,{children:"TA delivers the encrypted ServerTokenData to the CApp."}),"\n",(0,r.jsx)(n.li,{children:"The CApp decrypts the ServerTokenData."}),"\n",(0,r.jsx)(n.li,{children:"The CApp generates the ServerToken."}),"\n",(0,r.jsx)(n.li,{children:"The CApp submits the ServerToken whenever it requests TA."}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"detailed-server-token-issuance-process",children:"Detailed Server Token Issuance Process"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"proc_server_token_detail",src:t(52021).A+"",width:"1244",height:"1899"})}),"\n",(0,r.jsx)(n.h4,{id:"server-token-data",children:"Server Token Data"}),"\n",(0,r.jsx)(n.p,{children:"Below are the data specifications necessary for generating a Server Token. For more details, please refer to [DATA-SPEC]."}),"\n",(0,r.jsx)(n.h5,{id:"signedwalletinfo",children:"SignedWalletInfo"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c#",children:'def object SignedWalletInfo: "signed wallet information"\n{\n    + object "wallet": "wallet information"\n    {\n        + walletId "id" : "wallet id"\n        + did      "did": "wallet DID"\n    }\n    + multibase   "nonce": "wallet nonce", byte_length(16)\n    + AssertProof "proof": "wallet proof - wallet signature"\n}\n'})}),"\n",(0,r.jsx)(n.h5,{id:"attestedappinfo",children:"AttestedAppInfo"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c#",children:'def object AttestedAppInfo: "attested app information"\n{\n    + appId       "appId"   : "CApp id"\n    + Provider    "provider": "CApp provider information"\n    + multibase   "nonce"   : "provider nonce", byte_length(16)\n    + AssertProof "proof"   : "provider proof - CApp provider signature"\n}\n'})}),"\n",(0,r.jsx)(n.h5,{id:"servertokenseed",children:"ServerTokenSeed"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c#",children:'def object ServerTokenSeed: "server token seed"\n{\n    + SERVER_TOKEN_PURPOSE "purpose"   : "token usage purpose"\n    + SignedWalletInfo     "walletInfo": "signed wallet information"\n    + AttestedAppInfo      "caAppInfo" : "attested CApp information"\n}\n'})}),"\n",(0,r.jsx)(n.h5,{id:"servertokendata",children:"ServerTokenData"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c#",children:'def object ServerTokenData: "server token data"\n{\n    + SERVER_TOKEN_PURPOSE "purpose"   : "token usage purpose"\n    + walletId             "walletId"  : "wallet id"\n    + appId                "caAppId"   : "CApp id"\n    + utcDatetime          "validUntil": "token expiration date and time"\n    + Provider             "provider"  : "provider information"\n    + multibase            "nonce"     : "provider nonce", byte_length(16)\n    + AssertProof          "proof"     : "provider proof - provider signature"\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},52021:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/proc_server_token_detail_ko-b9418a7afba9154e27e9feb35c6ed6be.svg"},7793:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/proc_server_token_ko-6fd7ddfe4c4edbb2b31506205148bb08.svg"},8979:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/proc_wallet_token_detail_ko-727427222b364d82a7d8b1f7542e2ace.svg"},96775:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/proc_wallet_token_ko-4b36bffa3890a0667b08264bcac3c190.svg"},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(96540);const r={},l=s.createContext(r);function i(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);